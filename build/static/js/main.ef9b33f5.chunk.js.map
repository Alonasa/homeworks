{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Textarea","Message","props","className","src","avatar","name","message","time","messageData","HW1","Affair","s","list","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilterChecked","filter","selected","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","body","title","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","success","value","onChange","indent","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ef9b33f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Affairs_body__14erQ\",\"title\":\"Affairs_title__28DTS\",\"list\":\"Affairs_list__zlLbW\",\"affair\":\"Affairs_affair__3rwYr\",\"selected\":\"Affairs_selected__3CnL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Greeting_body__2GPtW\",\"title\":\"Greeting_title__3w2OV\",\"success\":\"Greeting_success__1waT7\",\"error\":\"Greeting_error__20BML\",\"indent\":\"Greeting_indent__1Tz3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__iHn0M\",\"superInput\":\"SuperInputText_superInput__2lZgL\",\"errorInput\":\"SuperInputText_errorInput__33CU3\",\"error\":\"SuperInputText_error__1H7kn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3ueJG\",\"column\":\"HW4_column__2Z64C\",\"testSpanError\":\"HW4_testSpanError__2vNcR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1DIXZ\",\"red\":\"SuperButton_red__1qSOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__18UaU\",\"checkbox\":\"SuperCheckbox_checkbox__3s7vO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3CaSs\"};","import React from 'react'\r\nimport './Message.css'\r\n\r\ntype propsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: propsType) {\r\n    return (\r\n      <div className=\"message\">\r\n        <div className=\"message__sended\">\r\n          <img className=\"message__avatar\" src={props.avatar}/>\r\n          <div className=\"message__data\">\r\n            <h3 className=\"message__author\">{props.name}</h3>\r\n            <p className=\"message__text\">{props.message}</p>\r\n            <span className=\"message__time\">{props.time}</span>\r\n          </div>\r\n        </div>\r\n        <Textarea/>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst Textarea = () => {\r\n  return (\r\n    <div>\r\n      <input/>\r\n      <button>Send</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport Message from './Message';\r\n\r\n\r\n\r\nconst messageData = {\r\n  avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n  name: 'Some Name',\r\n  message: 'some text',\r\n  time: '22:00',\r\n}\r\n\r\n\r\n\r\nfunction HW1() {\r\n  return (\r\n    <div>\r\n      <hr/>\r\n      homeworks 1\r\n      \r\n      {/*should work (должно работать)*/}\r\n      <Message\r\n        avatar={messageData.avatar}\r\n        name={messageData.name}\r\n        message={messageData.message}\r\n        time={messageData.time}\r\n      />\r\n      \r\n      <hr/>\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeMessage/>*/}\r\n      <hr/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HW1","import React from 'react'\r\nimport {AffairType} from './HW2';\r\nimport s from './Affairs.module.css';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number)=>void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n      props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div key={props.affair._id} className={s.list}>\r\n            <span>{props.affair.name}</span>\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n  data: Array<AffairType>\r\n  setFilter: (value: FilterType) => void\r\n  deleteAffairCallback: (_id: number) => void\r\n  filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n  const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n    \r\n    const setFilterChecked= (filter: FilterType) => {\r\n      return props.filter === filter ? s.selected : s.affair\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={setFilterChecked('all')} onClick={setAll}>All</button>\r\n            <button className={setFilterChecked('high')} onClick={setHigh}>High</button>\r\n            <button className={setFilterChecked('middle')} onClick={setMiddle}>Middle</button>\r\n            <button className={setFilterChecked('low')} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css';\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\r\nexport type AffairType = {\r\n  _id: number\r\n  name: string\r\n  priority: string\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType):Array<AffairType> => { // need to fix any\r\n  if (filter === 'all') return affairs\r\n  else return affairs.filter(a => a.priority === filter)// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number):Array<AffairType> => { // need to fix any\r\n  return affairs.filter(a=> a._id !== _id)\r\n  // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n  const [filter, setFilter] = useState<FilterType>('all')\r\n  \r\n  const filteredAffairs = filterAffairs(affairs, filter)\r\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n  \r\n  return (\r\n    <div className={s.body}>\r\n      <hr/>\r\n      <h3 className={s.title}>homeworks 2</h3>\r\n      \r\n      {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=>void // need to fix any\r\n    addUser: ()=>void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = name ? s.success : s.error  // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span className={s.indent}>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n    \r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n    const addUser = () => {\r\n        if (name) {\r\n            addUserCallback(name);\r\n            setName(name);\r\n            alert(`Hello ${name}!`);\r\n            setName('');\r\n        } else {\r\n            setError(error)\r\n        } // need to fix\r\n    }\r\n    \r\n    const totalUsers = users.length // need to fix\r\n    \r\n    return (\r\n      <Greeting\r\n        name={name}\r\n        setNameCallback={setNameCallback}\r\n        addUser={addUser}\r\n        error={error}\r\n        totalUsers={totalUsers}\r\n      />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\nimport s from './Greeting.module.css'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n      const user = {_id: v1(), name: name}\r\n      setUsers([user, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <hr/>\r\n          <h3 className={s.title}>homeworks 3</h3>\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with\r\n  // (?:) and\r\n  // s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n      onChange && onChange(e)\r\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n  \r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>homeworks 4</h3>\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*---------------------------Работает-------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text{text}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}